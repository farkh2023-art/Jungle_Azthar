name: Build & Test

on:
  pull_request:
    branches: [ "main", "develop" ]
  push:
    branches: [ "develop" ]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval \"db.adminCommand('ping')\""
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install backend dependencies
        run: npm ci --prefix apps/backend

      - name: Install frontend dependencies
        run: npm ci --prefix apps/web

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python services dependencies
        run: pip install -r services/python/requirements.txt

      - name: Lint
        run: npm run lint --prefix apps/backend

      - name: Unit tests
        run: npm test --prefix apps/backend

      - name: Build backend
        run: npm run build --prefix apps/backend

      - name: Build frontend
        run: npm run build --prefix apps/web

      - name: Docker compose build (optional)
        run: docker-compose -f docker-compose.yml build
